{
    "swagger": "2.0",
    "info": {
        "contact": {}
    },
    "basePath": "/fabric",
    "paths": {
        "/initialize/": {
            "post": {
                "tags": [
                    "initialize"
                ],
                "description": "create channel, join channel, and instantiate chaincode",
                "operationId": "InitializeController.Initialize",
                "responses": {
                    "200": {
                        "description": "{string} install and instantiate chaincode successfully"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/model/AddModel": {
            "post": {
                "tags": [
                    "model"
                ],
                "description": "Invoke chaincode on peers",
                "operationId": "AssetController.AddModel",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for chaincode Description",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/assetApp.AddModelArgs"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} txId"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/model/DeleteModel/{ModelName}": {
            "put": {
                "tags": [
                    "model"
                ],
                "description": "delete model",
                "operationId": "AssetController.DeleteModel",
                "parameters": [
                    {
                        "in": "path",
                        "name": "ModelName",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} txId"
                    },
                    "403": {
                        "description": ":ModelName is empty"
                    }
                }
            }
        },
        "/model/GetHistoryForModel/{ModelName}": {
            "get": {
                "tags": [
                    "model"
                ],
                "description": "get history for model",
                "operationId": "AssetController.GetHistoryForModel",
                "parameters": [
                    {
                        "in": "path",
                        "name": "ModelName",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} ModelHistory"
                    },
                    "403": {
                        "description": ":ModelName is empty"
                    }
                }
            }
        },
        "/model/QueryModel/{ModelName}": {
            "get": {
                "tags": [
                    "model"
                ],
                "description": "get model by name",
                "operationId": "AssetController.QueryModel",
                "parameters": [
                    {
                        "in": "path",
                        "name": "ModelName",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{object}assetApp.AddModelArgs"
                    },
                    "403": {
                        "description": ":ModelName is empty"
                    }
                }
            }
        },
        "/model/QueryModelsByOwner/{owner}": {
            "get": {
                "tags": [
                    "model"
                ],
                "description": "query models by owner",
                "operationId": "AssetController.QueryModelsByOwner",
                "parameters": [
                    {
                        "in": "path",
                        "name": "owner",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} ModelList"
                    },
                    "403": {
                        "description": ":owner is empty"
                    }
                }
            }
        },
        "/model/TransferModel": {
            "put": {
                "tags": [
                    "model"
                ],
                "description": "Invoke chaincode on peers",
                "operationId": "AssetController.TransferModel",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for chaincode content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/assetApp.TransferModelArgs"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} txId"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/user/": {
            "get": {
                "tags": [
                    "user"
                ],
                "description": "Logs user into the system",
                "operationId": "UserManageController.Login",
                "parameters": [
                    {
                        "in": "query",
                        "name": "username",
                        "description": "The username for login",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "password",
                        "description": "The password for login",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} login successfully"
                    },
                    "403": {
                        "description": "user not exist"
                    }
                }
            },
            "put": {
                "tags": [
                    "user"
                ],
                "description": "update the user",
                "operationId": "UserManageController.UpdateInfo",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for user content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/user.User"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} update successfully"
                    },
                    "403": {
                        "description": ":uid is not int"
                    }
                }
            },
            "post": {
                "tags": [
                    "user"
                ],
                "description": "register user",
                "operationId": "UserManageController.Register",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for user content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/user.User"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{int} user.User.Id"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        }
    },
    "definitions": {
        "assetApp.AddModelArgs": {
            "title": "AddModelArgs",
            "type": "object",
            "properties": {
                "desc": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "owner": {
                    "type": "string"
                },
                "price": {
                    "type": "string"
                }
            }
        },
        "assetApp.TransferModelArgs": {
            "title": "TransferModelArgs",
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "newOwner": {
                    "type": "string"
                }
            }
        },
        "user.User": {
            "title": "User",
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "mail": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "passwd": {
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                },
                "type": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        }
    },
    "tags": [
        {
            "name": "user",
            "description": "Operations about Users\n"
        },
        {
            "name": "initialize",
            "description": "Operations about Initialize\n"
        },
        {
            "name": "model",
            "description": "Operations about Invoke\n"
        }
    ]
}